{"version":3,"sources":["components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","App.tsx","index.tsx"],"names":["TextField","name","value","label","required","onChange","useState","Math","random","toString","slice","id","touched","setTouched","hasError","trim","className","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","count","setCount","title","setTitle","description","setDescription","imgUrl","setImgUrl","imdbUrl","setImdbUrl","imdbId","setImdbId","isSubmitDisabled","onSubmit","e","preventDefault","curr","disabled","MovieCard","movie","src","alt","href","MoviesList","movies","map","App","moviesFromServer","moviesForRender","setMoviesForRender","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5102ebce.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => { },\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value.trim();\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n          required={required}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (movie: Movie) => void\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const isSubmitDisabled = !title.trim()\n    || !imgUrl.trim()\n    || !imdbUrl.trim()\n    || !imdbId.trim();\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    setCount(curr => curr + 1);\n\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isSubmitDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { useState } from 'react';\nimport { NewMovie } from './components/NewMovie';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [moviesForRender, setMoviesForRender] = useState(moviesFromServer);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesForRender} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={(movie) => {\n          setMoviesForRender(curr => [...curr, movie]);\n        }}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}